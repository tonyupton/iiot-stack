{
  // Simulator settings
  // https://timebase.flow-software.com/en/knowledge-base/simulator-collector

  "Settings": {
    "Backfill": 7, // days

    // Sequence groups
    "Sequences": {

      // The Juice Factory simulator illustrates the filling process on a number of fillers in a Juice Factory's packaging hall
      // The Filler sequence
      "Fillers": {
        // Template map (this map will generate 10 Fillers due to the "Equipment Number" field being "1-10" (i.e. 1 through 10, increment of 1)
        "map": [
          {
            "name": "Area Code",          // Map fields translate to tag metadata (i.e. tag fields)
            "data": "131"
          },
          {
            "name": "Equipment",
            "data": "Filler"
          },
          {
            "name": "Equipment Number",
            "data": "1-10"
          }
        ],

        // Steps represent the process "cycle", like a state or step engine in a PLC program
        "steps": [
          {
            "value": "0", // Value of a step is a string (due to function capability), but must result in an integer value
            "duration": "random(15, 45)" // Duration of a step (minutes) is a string (due to function capability), but must result in an integer or double value
          },
          {
            "value": "10",
            "duration": "random(35, 120)"
          },
          {
            "value": "20",
            "duration": "random(35, 155)"
          },
          {
            "value": "random(21, 23)",
            "duration": "random(0, 10)"
          },
          {
            "value": "20",
            "duration": "random(45, 155)"
          },
          {
            "value": "random(21, 23)",
            "duration": "random(0, 10)"
          },
          {
            "value": "20",
            "duration": "random(35, 155)"
          },
          {
            "value": "random(21, 23)",
            "duration": "random(0, 10)"
          },
          {
            "value": "20",
            "duration": "random(45, 55)"
          },
          {
            "value": "random(21, 23)",
            "duration": "random(0, 10)"
          },
          {
            "value": "20",
            "duration": "random(15, 45)"
          },
          {
            "value": "30",
            "duration": "random(35, 95)"
          }
        ],

        // Tags for which data is generated in relation to the above Step definitions
        "tags": [
          {
            // State tag
            // Placeholders, in [ ], are replaced by Field values, fields defined either in the Sequnence Map, or in the Tag itself
            "name": "[Equipment Number, FL000].[Measure]",
            "description": "[Equipment] [Equipment Number] [Measure]",

            // Unit of Measure, or state enumeration, dictionary of key (integer) value (string) pairs
            "uom": {
              "0": "Idle",
              "10": "Startup",
              "20": "Running",
              "21": "Bottle starvation",
              "22": "Bottle jam",
              "23": "Downstream bottleneck",
              "30": "Cleaning"
            },

            // Tag specific Fields (metadata)
            "fields": {
              "Measure": "State",
              "Product": "Juice"
            },

            // Datatype can be System.Double, System.Int64, System.Int32, or System.String
            "type": "System.Int32",

            // Data values to be generated for this tag, sequence of values matches Step cycle
            "values": [
              "step"            // All steps will reference the Step value as its data
            ]
          },
          {
            // Product tag
            "name": "[Equipment Number, FL000].[Measure]",
            "description": "[Equipment] [Equipment Number] [Measure]",
            "uom": {
              "0": "Water",
              "1": "Apple",
              "2": "Lemonade",
              "3": "Raspberry",
              "4": "Orange",
              "5": "Peach"
            },
            "fields": {
              "Measure": "Product"
            },
            "type": "System.Int32",
            "values": [
              "0",              // First step in cycle always starts with 0
              "random(0, 5)",   // Next step in cycle will be a random number between 0 and 5
              "previous"        // All remaining steps will reference the value generated in the second step
            ]
          },
          {
            // BatchId tag
            "name": "[Equipment Number, FL000].[Measure]",
            "description": "[Equipment] [Equipment Number] [Measure]",
            "fields": {
              "Measure": "BatchId"
            },
            "type": "System.String",
            "values": [
              "",
              "[Equipment Number, FL000]-[Step Date, yyMMddHHmm]", // For System.String tags, Field placeholders can be used. [Step Date] is a special field available to all string tags
              "previous"
            ]
          },
          {
            // Temperature tag
            "name": "[Area Code, 000]-[Instrument Code]-[Equipment Number, 000].PV",
            "description": "[Equipment] [Equipment Number] [Measure]",
            "uom": { "1": "°F" },
            "fields": {
              "Measure": "Temperature",
              "Instrument Code": "TT"
            },
            "type": "System.Double",
            "values": [
              "flat(1.5, 18.0, 1.0)", // flat(interval, value, noise), value (double) every interval (seconds) with optional random noise (double) applied
              "ramp(1.5, 64.8, 1.3)", // ramp(interval, to, noise), ramp from previous step to (double) value every interval (seconds) with optional random noise (double) applied
              "flat(1.5, 64.8, 1.3)",
              "flat(1.5, 64.8, 1.3)",
              "flat(1.5, 64.8, 1.3)",
              "flat(1.5, 64.8, 1.3)",
              "flat(1.5, 64.8, 1.3)",
              "flat(1.5, 64.8, 1.3)",
              "flat(1.5, 64.8, 1.3)",
              "flat(1.5, 64.8, 1.3)",
              "flat(1.5, 64.8, 1.3)",
              "ramp(1.5, 18.5, 1.0)"
            ]
          },
          {
            // Pressure tag
            "name": "[Area Code, 000]-[Instrument Code]-[Equipment Number, 000].PV",
            "description": "[Equipment] [Equipment Number] [Measure]",
            "uom": { "1": "MPa" },
            "fields": {
              "Measure": "Pressure",
              "Instrument Code": "PT"
            },
            "type": "System.Double",
            "values": [
              "flat(1.5, 1.5, 0.2)",
              "ramp(1.5, 6.48, 0.2)",
              "flat(1.5, 6.48, 0.2)",
              "flat(1.5, 6.48, 0.2)",
              "flat(1.5, 6.48, 0.2)",
              "flat(1.5, 6.48, 0.2)",
              "flat(1.5, 6.48, 0.2)",
              "flat(1.5, 6.48, 0.2)",
              "flat(1.5, 6.48, 0.2)",
              "flat(1.5, 6.48, 0.2)",
              "flat(1.5, 6.48, 0.2)",
              "ramp(1.5, 1.5, 0.2)"
            ]
          },
          {
            // Flow Rate tag
            "name": "[Area Code, 000]-[Instrument Code]-[Equipment Number, 000].PV",
            "description": "[Equipment] [Equipment Number] [Measure]",
            "uom": { "1": "ft³/s" },
            "fields": {
              "Measure": "Flow Rate",
              "Instrument Code": "FT"
            },
            "type": "System.Double",
            "values": [
              "flat(1.5, 0.0, 0.5)",
              "ramp(1.5, 14, 0.5)",
              "flat(1.5, 13.8, 0.5)",
              "flat(1.5, 0.0, 0.5)",
              "flat(1.5, 13.8, 0.5)",
              "flat(1.5, 0.0, 0.5)",
              "flat(1.5, 13.8, 0.5)",
              "flat(1.5, 0.0, 0.5)",
              "flat(1.5, 13.8, 0.5)",
              "flat(1.5, 0.0, 0.5)",
              "flat(1.5, 13.8, 0.5)",
              "flat(1.5, 3.3, 0.5)"
            ]
          },
          {
            // Flow Totalizer tag
            "name": "[Area Code, 000]-[Instrument Code]-[Equipment Number, 000].PV",
            "description": "[Equipment] [Equipment Number] [Measure]",
            "uom": { "1": "ft³" },
            "fields": {
              "Measure": "Flow Total",
              "Instrument Code": "FQ"
            },
            "type": "System.Double",
            "values": [
              "0", // No totalizing for first step in cycle
              "integrate([Area Code, 000]-FT-[Equipment Number, 000].PV, second, true)", // Integrate Flow Rate tag on a timebase of second, with a reset to 0
              "integrate([Area Code, 000]-FT-[Equipment Number, 000].PV, second, false)" // Integrate Flow Rate tag on a timebase of second, without a reset
            ]
          }
        ]
      }
    }
  }
}